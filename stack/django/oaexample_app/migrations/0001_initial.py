# Generated by Django 5.0.7 on 2024-12-18 20:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import oaexample_app.models
import utils.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=16, null=True, validators=[oaexample_app.models.validate_phone_number], verbose_name='Phone')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Bio')),
                ('picture', models.ImageField(blank=True, null=True, upload_to=oaexample_app.models.upload_file_path, verbose_name='Picture')),
                ('cover_photo', models.ImageField(blank=True, null=True, upload_to=oaexample_app.models.upload_file_path, verbose_name='Cover Photo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['last_login'],
            },
            bases=(models.Model, utils.models.BumpParentsModelMixin),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AppTokens',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('applemusic', 'applemusic')], default='applemusic', max_length=25, verbose_name='Provider')),
                ('token', models.TextField(verbose_name='token')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='expires at')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Social Token',
                'verbose_name_plural': 'Social Tokens',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('postal_address', models.CharField(max_length=255)),
                ('picture', models.ImageField(blank=True, null=True, upload_to=oaexample_app.models.upload_file_path, verbose_name='Picture')),
                ('cover_photo', models.ImageField(blank=True, null=True, upload_to=oaexample_app.models.upload_file_path, verbose_name='Cover Photo')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('population', models.IntegerField(blank=True, null=True, verbose_name='Population')),
                ('altitude', models.IntegerField(blank=True, null=True, verbose_name='Altitude')),
                ('county', models.CharField(blank=True, max_length=255, null=True, verbose_name='County')),
                ('land_area', models.IntegerField(blank=True, null=True, verbose_name='Land Area')),
                ('water_area', models.IntegerField(blank=True, null=True, verbose_name='Water Area')),
                ('total_area', models.IntegerField(blank=True, null=True, verbose_name='Total Area')),
                ('density', models.IntegerField(blank=True, null=True, verbose_name='Density')),
                ('timezone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Timezone')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('officials', models.ManyToManyField(blank=True, related_name='officials_to_user_profile', to=settings.AUTH_USER_MODEL, verbose_name='Officials')),
                ('sponsors', models.ManyToManyField(blank=True, related_name='sponsors_to_user_profile', to=settings.AUTH_USER_MODEL, verbose_name='Sponsors')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Meetings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('address', models.CharField(max_length=255)),
                ('start', models.DateTimeField(verbose_name='Start')),
                ('end', models.DateTimeField(verbose_name='End')),
                ('agenda_json', models.JSONField(blank=True, null=True, verbose_name='Agenda JSON')),
                ('duration', models.IntegerField(blank=True, null=True, verbose_name='Duration')),
                ('privacy', models.IntegerField(blank=True, null=True, verbose_name='Privacy')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('moderators', models.ManyToManyField(related_name='moderators_to_user_account', to=settings.AUTH_USER_MODEL, verbose_name='Moderators')),
                ('speakers', models.ManyToManyField(related_name='speakers_to_user_account', to=settings.AUTH_USER_MODEL, verbose_name='Speakers')),
                ('sponsors', models.ManyToManyField(blank=True, related_name='sponsors_to_user_account', to=settings.AUTH_USER_MODEL, verbose_name='Sponsors')),
            ],
            options={
                'verbose_name': 'Meeting',
                'verbose_name_plural': 'Meetings',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('invited', 'Invited'), ('rsvpd', ' rsvpd'), ('attending', ' attending'), ('attended', ' attended')], max_length=20, verbose_name='Status')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('invited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Invited By')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('meeting', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='oaexample_app.meetings', verbose_name='Meeting')),
            ],
            options={
                'verbose_name': 'Invite',
                'verbose_name_plural': 'Invites',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeetingTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Meeting Type',
                'verbose_name_plural': 'Meeting Types',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='meetings',
            name='meeting_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='oaexample_app.meetingtypes', verbose_name='Meeting Type'),
        ),
        migrations.CreateModel(
            name='Pages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description_html', models.TextField(verbose_name='Description HTML')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Parties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('logo', models.ImageField(blank=True, null=True, upload_to=oaexample_app.models.upload_file_path, verbose_name='Logo')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Party',
                'verbose_name_plural': 'Parties',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Officials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255, verbose_name='Job Title')),
                ('office_phone', models.CharField(blank=True, max_length=16, null=True, validators=[oaexample_app.models.validate_phone_number], verbose_name='Office Phone')),
                ('office_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Office Email')),
                ('social_links', models.URLField(blank=True, null=True, verbose_name='Social Media links')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('city', models.ManyToManyField(related_name='city_to_cities', to='oaexample_app.cities', verbose_name='City')),
                ('party_affiliation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='oaexample_app.parties', verbose_name='Party')),
            ],
            options={
                'verbose_name': 'Official',
                'verbose_name_plural': 'Officials',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Publications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('media', models.FileField(blank=True, null=True, upload_to=oaexample_app.models.upload_file_path, verbose_name='Media')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('relationships', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='oaexample_app.officials', verbose_name='Relationships')),
            ],
            options={
                'verbose_name': 'Publication',
                'verbose_name_plural': 'Publications',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rallies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('media', models.FileField(blank=True, null=True, upload_to=oaexample_app.models.upload_file_path, verbose_name='Media')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rally',
                'verbose_name_plural': 'Rallies',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='meetings',
            name='rally',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='oaexample_app.rallies', verbose_name='Rally'),
        ),
        migrations.CreateModel(
            name='ActionPlans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('recommendation', models.TextField(blank=True, null=True, verbose_name='Recommendation')),
                ('exe_summary', models.TextField(blank=True, null=True, verbose_name='Executive Summary')),
                ('analysis', models.TextField(blank=True, null=True, verbose_name='Analysis and Policy Alternatives / Proposal')),
                ('background', models.TextField(blank=True, null=True, verbose_name='Background / Legislative History / Problem Statement')),
                ('pro_argument', models.TextField(blank=True, null=True, verbose_name='Pro Argument')),
                ('con_argument', models.TextField(blank=True, null=True, verbose_name='Con Argument')),
                ('prerequisites', models.TextField(verbose_name='Prerequisites')),
                ('timeline', models.TextField(blank=True, null=True, verbose_name='Timeline')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('coauthors', models.ManyToManyField(blank=True, related_name='coauthors_to_user_account', to=settings.AUTH_USER_MODEL, verbose_name='CoAuthors')),
                ('rally', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='oaexample_app.rallies', verbose_name='Rally')),
            ],
            options={
                'verbose_name': 'Action Plan',
                'verbose_name_plural': 'Action Plans',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Resources',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description_html', models.TextField(verbose_name='Description HTML')),
                ('image', models.ImageField(upload_to=oaexample_app.models.upload_file_path, verbose_name='Image')),
                ('postal_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Postal Address')),
                ('price_ccoin', models.IntegerField(verbose_name='Price (citizencoin)')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='users',
            name='resources',
            field=models.ManyToManyField(blank=True, related_name='resources_to_resources', to='oaexample_app.resources', verbose_name='Resources'),
        ),
        migrations.CreateModel(
            name='ResourceTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resource Type',
                'verbose_name_plural': 'Resource Types',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='resources',
            name='resource_type',
            field=models.ManyToManyField(related_name='resource_type_to_resource_types', to='oaexample_app.resourcetypes', verbose_name='Resource Type'),
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('start', models.DateTimeField(verbose_name='Start')),
                ('end', models.DateTimeField(verbose_name='End')),
                ('privacy', models.CharField(blank=True, choices=[('public', 'Public'), ('inviteonly', ' invite-only'), ('requests', ' requests')], max_length=20, null=True, verbose_name='Privacy')),
                ('status', models.CharField(blank=True, choices=[('live', 'Live'), ('scheduled', ' scheduled'), ('ended', ' ended')], max_length=20, null=True, verbose_name='Status')),
                ('chat_thread', models.CharField(blank=True, max_length=255, null=True, verbose_name='Chat Thread')),
                ('recording', models.FileField(blank=True, null=True, upload_to=oaexample_app.models.upload_file_path, verbose_name='Recording')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
                ('meeting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='oaexample_app.meetings', verbose_name='Meeting')),
                ('rally', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='oaexample_app.rallies', verbose_name='Rally')),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Rooms',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='meetings',
            name='rooms',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='oaexample_app.rooms', verbose_name='Rooms'),
        ),
        migrations.CreateModel(
            name='Attendees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Display Name')),
                ('display_bg', models.ImageField(blank=True, null=True, upload_to=oaexample_app.models.upload_file_path, verbose_name='Display Bg')),
                ('role', models.CharField(choices=[('viewer', 'Viewer'), ('presenter', ' presenter'), ('admin', ' admin'), ('chat_moderator', ' chat moderator')], max_length=20, verbose_name='Role')),
                ('stream', models.CharField(blank=True, max_length=255, null=True, verbose_name='Stream')),
                ('is_muted', models.BooleanField(blank=True, null=True, verbose_name='Is Muted')),
                ('sharing_video', models.BooleanField(blank=True, null=True, verbose_name='Sharing Video')),
                ('sharing_audio', models.BooleanField(blank=True, null=True, verbose_name='Sharing Audio')),
                ('sharing_screen', models.BooleanField(blank=True, null=True, verbose_name='Sharing Screen')),
                ('hand_raised', models.BooleanField(blank=True, null=True, verbose_name='Hand Raised')),
                ('is_typing', models.BooleanField(blank=True, null=True, verbose_name='Is Typing')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('room_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='oaexample_app.rooms', verbose_name='Room ID')),
            ],
            options={
                'verbose_name': 'Attendee',
                'verbose_name_plural': 'Attendees',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stakeholders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('image', models.ImageField(blank=True, null=True, upload_to=oaexample_app.models.upload_file_path, verbose_name='Image')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Stakeholder',
                'verbose_name_plural': 'Stakeholders',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('icon', models.ImageField(blank=True, null=True, upload_to=oaexample_app.models.upload_file_path, verbose_name='Icon')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='cities',
            name='state_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='oaexample_app.states', verbose_name='State'),
        ),
        migrations.CreateModel(
            name='Subscriptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('approved', 'Approved'), ('denied', ' denied'), ('active', ' active'), ('seen', ' seen')], max_length=20, verbose_name='Status')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('meeting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='oaexample_app.meetings', verbose_name='Meeting')),
                ('rally', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='oaexample_app.rallies', verbose_name='Rally')),
                ('subscriber', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Subscriber')),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('icon', models.ImageField(blank=True, null=True, upload_to=oaexample_app.models.upload_file_path, verbose_name='Icon')),
                ('photo', models.ImageField(blank=True, null=True, upload_to=oaexample_app.models.upload_file_path, verbose_name='Photo')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Topic',
                'verbose_name_plural': 'Topics',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='rallies',
            name='topics',
            field=models.ManyToManyField(related_name='topics_to_topics', to='oaexample_app.topics', verbose_name='Topics'),
        ),
        migrations.AddConstraint(
            model_name='apptokens',
            constraint=models.UniqueConstraint(fields=('author', 'provider'), name='unique_user_provider'),
        ),
    ]
